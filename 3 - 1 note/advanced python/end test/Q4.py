'''
주석을 참고하여 밑줄 친 부분을 완성하고, 아래 코드를 완성하였을 때 나오는 c, d, e가 어떤 값인지, 그리고 f[4,1]의 값이 무엇인지 기술하시오.

import numpy as np
a = _______ # 축 0을 따라 0,2,4,6,8을 갖는 size가 1x5인 a를 정의하시오.
b = _______ # 축 1을 따라 0,1,2,3을 갖는 size가 4x1인 b를 정의하시오.
c = a+b
d = _______ # c의 모양을 바꾸어 축 0을 따라 size가 10이 되는 d를 정의하시오.
e = _______ # d에서 짝수번째 행만 slicing할 것
f = _______ # f는 e와 같은 크기의 행렬이며 f의 각 원소는 e의 각 원소를 세제곱한 후 5를 더한 것과 같다.
'''

import numpy as np

a = np.array([0, 2, 4, 6, 8])
b = np.array([[0], [1], [2], [3]])
c = a + b
'''
c는 (4, 5) 크기의 배열이며 각 행은 a와 b의 같은 인덱스의 행을 더한 값과 같다. 예를 들어 c의 0행은 a의 0행에 있는 각 열의 값에 b의 0행 0열의 값을 더한 것과 같다. 이때 두 배열의 차원이 동일하지 않은데, 각각 1과 1이 아닌 수이므로 문제 없다.
c = array([[ 0,  2,  4,  6,  8],
       [ 1,  3,  5,  7,  9],
       [ 2,  4,  6,  8, 10],
       [ 3,  5,  7,  9, 11]])
'''
d = np.reshape(c, (10, -1))
'''
d는 (10, 2) 크기의 배열이다. c의 배열을 (1, 20) 크기의 1차원 배열로 바꾼 후 2개씩 묶어 총 10개의 행으로 만든 것과 같다.
d = array([[ 0,  2],
       [ 4,  6],
       [ 8,  1],
       [ 3,  5],
       [ 7,  9],
       [ 2,  4],
       [ 6,  8],
       [10,  3],
       [ 5,  7],
       [ 9, 11]])
'''
e = d[1::2]
'''
참고 링크 : https://zetawiki.com/wiki/NumPy_%ED%99%80%EC%88%98%EB%B2%88%EC%A7%B8_%ED%96%89,_%EC%A7%9D%EC%88%98%EB%B2%88%EC%A7%B8_%ED%96%89_%EC%B6%94%EC%B6%9C
e는 d에서 짝수번째 행만 slicing한 것이다. 인덱스는 0부터 세지만 0행이 첫 번째 행이므로 1, 3, 5, 7, 9번 행이다.
e = array([[ 4,  6],
       [ 3,  5],
       [ 2,  4],
       [10,  3],
       [ 9, 11]])

추가 풀이 : [::]의 의미는 [(시작 인덱스):(끝 인덱스):(간격)]이다. 이 문제의 답은 1번 인덱스에서 시작해서 끝 인덱스는 지정하지 않았고(끝까지 전부), 간격이 2이므로 1, 3, 5, 7, 9번 행이 추출되는 것이다.
'''
f = e ** 3 + 5
'''
f[4, 1]은 e[4, 1]의 값인 11을 세제곱하고 5를 더한 값이다.
f[4, 1] = 1336
'''
